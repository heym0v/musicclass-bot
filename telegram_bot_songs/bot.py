import os
import re
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, CallbackQueryHandler, ContextTypes, filters

original_songs = []
normalized_songs = set()

TOKEN = os.environ.get("BOT_TOKEN")
ADMIN_ID = int(os.environ.get("ADMIN_ID"))

def normalize_song(song: str) -> str:
    cleaned = re.sub(r'[^\w\s]', '', song.lower())
    words = sorted(cleaned.split())
    return ' '.join(words)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üìÉ –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø–µ—Å–Ω–∏", callback_data="show_songs")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å —Å—é–¥–∞ –ø–µ—Å–Ω—é, –∞ —è –ø—Ä–æ–≤–µ—Ä—é, –µ—Å—Ç—å –ª–∏ –æ–Ω–∞. –ò–ª–∏ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —É–∂–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö.", reply_markup=reply_markup)

async def handle_song(update: Update, context: ContextTypes.DEFAULT_TYPE):
    song = update.message.text.strip()
    normalized = normalize_song(song)

    if normalized in normalized_songs:
        await update.message.reply_text("–≠—Ç–∞ –ø–µ—Å–Ω—è —É–∂–µ –±—ã–ª–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥—É—é.")
    else:
        normalized_songs.add(normalized)
        original_songs.append(song)
        await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –ü–µ—Å–Ω—è –ø—Ä–∏–Ω—è—Ç–∞.")
        sender = update.message.from_user
        sender_name = f"@{sender.username}" if sender.username else sender.first_name
        await context.bot.send_message(chat_id=ADMIN_ID, text=f"–ù–æ–≤–∞—è –ø–µ—Å–Ω—è –æ—Ç {sender_name}: {song}")

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "show_songs":
        if original_songs:
            text = "üé∂ –£–∂–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–µ –ø–µ—Å–Ω–∏:\n\n" + "\n".join(f"{i+1}. {s}" for i, s in enumerate(original_songs))
        else:
            text = "–ü–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø–µ—Å–µ–Ω."

        await query.edit_message_text(text=text)

if __name__ == '__main__':
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_song))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    app.run_polling()
